{"version":3,"file":"commonHelpers.js","sources":["../src/js/header.js","../src/js/dinosaur.js","../src/js/guessTheNumber.js","../src/js/leap_year.js"],"sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\n  const dropdown = document.querySelector(\".header__dropdown\");\n  const menu = document.querySelector(\".header__menu\");\n\n  dropdown.addEventListener(\"click\", function (event) {\n    event.stopPropagation();\n    dropdown.classList.toggle(\"active\");\n  });\n\n  document.addEventListener(\"click\", function (event) {\n    if (!dropdown.contains(event.target) && !menu.contains(event.target)) {\n      dropdown.classList.remove(\"active\");\n    }\n  });\n});\nfunction toggleTheme() {\n  const checkbox = document.getElementById(\"slider_checkbox\");\n  const body = document.body;\n  const header = document.querySelector(\"header\");\n\n  if (checkbox.checked) {\n    body.classList.remove(\"light-theme\");\n    body.classList.add(\"dark-theme\");\n\n    header.classList.remove(\"light-theme\");\n    header.classList.add(\"dark-theme\");\n  } else {\n    body.classList.remove(\"dark-theme\");\n    body.classList.add(\"light-theme\");\n\n    header.classList.remove(\"dark-theme\");\n    header.classList.add(\"light-theme\");\n  }\n}\n\ndocument\n  .getElementById(\"slider_checkbox\")\n  .addEventListener(\"change\", toggleTheme);\n","function hideClass(name) {\n    var myClasses = document.querySelectorAll(name),\n   i = 0,\n   l = myClasses.length;\n\n   for (i; i < l; i++) {\n     myClasses[i].style.display = 'none';\n   }\n }\n\n (function() {\n 'use strict';\n /**\n * T-Rex runner.\n * @param {string} outerContainerId Outer containing element id.\n * @param {object} opt_config\n * @constructor\n * @export\n */\n function Runner(outerContainerId, opt_config) {\n if (Runner.instance_) {\n return Runner.instance_;\n }\n Runner.instance_ = this;\n this.outerContainerEl = document.querySelector(outerContainerId);\n this.containerEl = null;\n this.detailsButton = this.outerContainerEl.querySelector('#details-button');\n this.config = opt_config || Runner.config;\n this.dimensions = Runner.defaultDimensions;\n this.canvas = null;\n this.canvasCtx = null;\n this.tRex = null;\n this.distanceMeter = null;\n this.distanceRan = 0;\n this.highestScore = 0;\n this.time = 0;\n this.runningTime = 0;\n this.msPerFrame = 1000 / FPS;\n this.currentSpeed = this.config.SPEED;\n this.obstacles = [];\n this.started = false;\n this.activated = false;\n this.crashed = false;\n this.paused = false;\n this.resizeTimerId_ = null;\n this.playCount = 0;\n this.audioBuffer = null;\n this.soundFx = {};\n this.audioContext = null;\n this.images = {};\n this.imagesLoaded = 0;\n this.loadImages();\n }\n window['Runner'] = Runner;\n /**\n * Default game width.\n * @const\n */\n var DEFAULT_WIDTH = 600;\n /**\n * Frames per second.\n * @const\n */\n var FPS = 60;\n /** @const */\n var IS_HIDPI = window.devicePixelRatio > 1;\n /** @const */\n var IS_IOS =\n window.navigator.userAgent.indexOf('UIWebViewForStaticFileContent') > -1;\n /** @const */\n var IS_MOBILE = window.navigator.userAgent.indexOf('Mobi') > -1 || IS_IOS;\n /** @const */\n var IS_TOUCH_ENABLED = 'ontouchstart' in window;\n /**\n * Default game configuration.\n * @enum {number}\n */\n Runner.config = {\n ACCELERATION: 0.001,\n BG_CLOUD_SPEED: 0.2,\n BOTTOM_PAD: 10,\n CLEAR_TIME: 3000,\n CLOUD_FREQUENCY: 0.5,\n GAMEOVER_CLEAR_TIME: 750,\n GAP_COEFFICIENT: 0.6,\n GRAVITY: 0.6,\n INITIAL_JUMP_VELOCITY: 12,\n MAX_CLOUDS: 6,\n MAX_OBSTACLE_LENGTH: 3,\n MAX_SPEED: 12,\n MIN_JUMP_HEIGHT: 35,\n MOBILE_SPEED_COEFFICIENT: 1.2,\n RESOURCE_TEMPLATE_ID: 'audio-resources',\n SPEED: 6,\n SPEED_DROP_COEFFICIENT: 3\n };\n /**\n * Default dimensions.\n * @enum {string}\n */\n Runner.defaultDimensions = {\n WIDTH: DEFAULT_WIDTH,\n HEIGHT: 150\n };\n /**\n * CSS class names.\n * @enum {string}\n */\n Runner.classes = {\n CANVAS: 'runner-canvas',\n CONTAINER: 'runner-container',\n CRASHED: 'crashed',\n ICON: 'icon-offline',\n TOUCH_CONTROLLER: 'controller'\n };\n /**\n * Image source urls.\n * @enum {array.<object>}\n */\n Runner.imageSources = {\n LDPI: [\n {name: 'CACTUS_LARGE', id: '1x-obstacle-large'},\n {name: 'CACTUS_SMALL', id: '1x-obstacle-small'},\n {name: 'CLOUD', id: '1x-cloud'},\n {name: 'HORIZON', id: '1x-horizon'},\n {name: 'RESTART', id: '1x-restart'},\n {name: 'TEXT_SPRITE', id: '1x-text'},\n {name: 'TREX', id: '1x-trex'}\n ],\n HDPI: [\n {name: 'CACTUS_LARGE', id: '2x-obstacle-large'},\n {name: 'CACTUS_SMALL', id: '2x-obstacle-small'},\n {name: 'CLOUD', id: '2x-cloud'},\n {name: 'HORIZON', id: '2x-horizon'},\n {name: 'RESTART', id: '2x-restart'},\n {name: 'TEXT_SPRITE', id: '2x-text'},\n {name: 'TREX', id: '2x-trex'}\n ]\n };\n /**\n * Sound FX. Reference to the ID of the audio tag on interstitial page.\n * @enum {string}\n */\n Runner.sounds = {\n BUTTON_PRESS: 'offline-sound-press',\n HIT: 'offline-sound-hit',\n SCORE: 'offline-sound-reached'\n };\n /**\n * Key code mapping.\n * @enum {object}\n */\n Runner.keycodes = {\n JUMP: {'38': 1, '32': 1}, // Up, spacebar\n DUCK: {'40': 1}, // Down\n RESTART: {'13': 1} // Enter\n };\n /**\n * Runner event names.\n * @enum {string}\n */\n Runner.events = {\n ANIM_END: 'webkitAnimationEnd',\n CLICK: 'click',\n KEYDOWN: 'keydown',\n KEYUP: 'keyup',\n MOUSEDOWN: 'mousedown',\n MOUSEUP: 'mouseup',\n RESIZE: 'resize',\n TOUCHEND: 'touchend',\n TOUCHSTART: 'touchstart',\n VISIBILITY: 'visibilitychange',\n BLUR: 'blur',\n FOCUS: 'focus',\n LOAD: 'load'\n };\n Runner.prototype = {\n /**\n * Setting individual settings for debugging.\n * @param {string} setting\n * @param {*} value\n */\n updateConfigSetting: function(setting, value) {\n if (setting in this.config && value != undefined) {\n this.config[setting] = value;\n switch (setting) {\n case 'GRAVITY':\n case 'MIN_JUMP_HEIGHT':\n case 'SPEED_DROP_COEFFICIENT':\n this.tRex.config[setting] = value;\n break;\n case 'INITIAL_JUMP_VELOCITY':\n this.tRex.setJumpVelocity(value);\n break;\n case 'SPEED':\n this.setSpeed(value);\n break;\n }\n }\n },\n\n loadImages: function() {\n var imageSources = IS_HIDPI ? Runner.imageSources.HDPI :\n Runner.imageSources.LDPI;\n var numImages = imageSources.length;\n for (var i = numImages - 1; i >= 0; i--) {\n var imgSource = imageSources[i];\n this.images[imgSource.name] = document.getElementById(imgSource.id);\n }\n this.init();\n },\n /**\n * Load and decode base 64 encoded sounds.\n */\n loadSounds: function() {\n if (!IS_IOS) {\n this.audioContext = new AudioContext();\n var resourceTemplate =\n document.getElementById(this.config.RESOURCE_TEMPLATE_ID).content;\n for (var sound in Runner.sounds) {\n var soundSrc =\n resourceTemplate.getElementById(Runner.sounds[sound]).src;\n soundSrc = soundSrc.substr(soundSrc.indexOf(',') + 1);\n var buffer = decodeBase64ToArrayBuffer(soundSrc);\n // Async, so no guarantee of order in array.\n this.audioContext.decodeAudioData(buffer, function(index, audioData) {\n this.soundFx[index] = audioData;\n }.bind(this, sound));\n }\n }\n },\n /**\n * Sets the game speed. Adjust the speed accordingly if on a smaller screen.\n * @param {number} opt_speed\n */\n setSpeed: function(opt_speed) {\n var speed = opt_speed || this.currentSpeed;\n // Reduce the speed on smaller mobile screens.\n if (this.dimensions.WIDTH < DEFAULT_WIDTH) {\n var mobileSpeed = speed * this.dimensions.WIDTH / DEFAULT_WIDTH *\n this.config.MOBILE_SPEED_COEFFICIENT;\n this.currentSpeed = mobileSpeed > speed ? speed : mobileSpeed;\n } else if (opt_speed) {\n this.currentSpeed = opt_speed;\n }\n },\n /**\n * Game initialiser.\n */\n init: function() {\n // Hide the static icon.\n //document.querySelector('.' + Runner.classes.ICON).style.visibility = 'hidden';\n this.adjustDimensions();\n this.setSpeed();\n this.containerEl = document.createElement('div');\n this.containerEl.className = Runner.classes.CONTAINER;\n // Player canvas container.\n this.canvas = createCanvas(this.containerEl, this.dimensions.WIDTH,\n this.dimensions.HEIGHT, Runner.classes.PLAYER);\n this.canvasCtx = this.canvas.getContext('2d');\n this.canvasCtx.fillStyle = '#f7f7f7';\n this.canvasCtx.fill();\n Runner.updateCanvasScaling(this.canvas);\n // Horizon contains clouds, obstacles and the ground.\n this.horizon = new Horizon(this.canvas, this.images, this.dimensions,\n this.config.GAP_COEFFICIENT);\n // Distance meter\n this.distanceMeter = new DistanceMeter(this.canvas,\n this.images.TEXT_SPRITE, this.dimensions.WIDTH);\n // Draw t-rex\n this.tRex = new Trex(this.canvas, this.images.TREX);\n this.outerContainerEl.appendChild(this.containerEl);\n if (IS_MOBILE) {\n this.createTouchController();\n }\n this.startListening();\n this.update();\n window.addEventListener(Runner.events.RESIZE,\n this.debounceResize.bind(this));\n },\n /**\n * Create the touch controller. A div that covers whole screen.\n */\n createTouchController: function() {\n this.touchController = document.createElement('div');\n this.touchController.className = Runner.classes.TOUCH_CONTROLLER;\n },\n /**\n * Debounce the resize event.\n */\n debounceResize: function() {\n if (!this.resizeTimerId_) {\n this.resizeTimerId_ =\n setInterval(this.adjustDimensions.bind(this), 250);\n }\n },\n /**\n * Adjust game space dimensions on resize.\n */\n adjustDimensions: function() {\n clearInterval(this.resizeTimerId_);\n this.resizeTimerId_ = null;\n var boxStyles = window.getComputedStyle(this.outerContainerEl);\n var padding = Number(boxStyles.paddingLeft.substr(0,\n boxStyles.paddingLeft.length - 2));\n this.dimensions.WIDTH = this.outerContainerEl.offsetWidth - padding * 2;\n // Redraw the elements back onto the canvas.\n if (this.canvas) {\n this.canvas.width = this.dimensions.WIDTH;\n this.canvas.height = this.dimensions.HEIGHT;\n Runner.updateCanvasScaling(this.canvas);\n this.distanceMeter.calcXPos(this.dimensions.WIDTH);\n this.clearCanvas();\n this.horizon.update(0, 0, true);\n this.tRex.update(0);\n // Outer container and distance meter.\n if (this.activated || this.crashed) {\n this.containerEl.style.width = this.dimensions.WIDTH + 'px';\n this.containerEl.style.height = this.dimensions.HEIGHT + 'px';\n this.distanceMeter.update(0, Math.ceil(this.distanceRan));\n this.stop();\n } else {\n this.tRex.draw(0, 0);\n }\n // Game over panel.\n if (this.crashed && this.gameOverPanel) {\n this.gameOverPanel.updateDimensions(this.dimensions.WIDTH);\n this.gameOverPanel.draw();\n }\n }\n },\n /**\n * Play the game intro.\n * Canvas container width expands out to the full width.\n */\n playIntro: function() {\n if (!this.started && !this.crashed) {\n this.playingIntro = true;\n this.tRex.playingIntro = true;\n // CSS animation definition.\n var keyframes = '@-webkit-keyframes intro { ' +\n 'from { width:' + Trex.config.WIDTH + 'px }' +\n 'to { width: ' + this.dimensions.WIDTH + 'px }' +\n '}';\n document.styleSheets[0].insertRule(keyframes, 0);\n this.containerEl.addEventListener(Runner.events.ANIM_END,\n this.startGame.bind(this));\n this.containerEl.style.webkitAnimation = 'intro .4s ease-out 1 both';\n this.containerEl.style.width = this.dimensions.WIDTH + 'px';\n if (this.touchController) {\n this.outerContainerEl.appendChild(this.touchController);\n }\n this.activated = true;\n this.started = true;\n } else if (this.crashed) {\n this.restart();\n }\n },\n /**\n * Update the game status to started.\n */\n startGame: function() {\n this.runningTime = 0;\n this.playingIntro = false;\n this.tRex.playingIntro = false;\n this.containerEl.style.webkitAnimation = '';\n this.playCount++;\n // Handle tabbing off the page. Pause the current game.\n window.addEventListener(Runner.events.VISIBILITY,\n this.onVisibilityChange.bind(this));\n window.addEventListener(Runner.events.BLUR,\n this.onVisibilityChange.bind(this));\n window.addEventListener(Runner.events.FOCUS,\n this.onVisibilityChange.bind(this));\n },\n clearCanvas: function() {\n this.canvasCtx.clearRect(0, 0, this.dimensions.WIDTH,\n this.dimensions.HEIGHT);\n },\n /**\n * Update the game frame.\n */\n update: function() {\n this.drawPending = false;\n var now = getTimeStamp();\n var deltaTime = now - (this.time || now);\n this.time = now;\n if (this.activated) {\n this.clearCanvas();\n if (this.tRex.jumping) {\n this.tRex.updateJump(deltaTime, this.config);\n }\n this.runningTime += deltaTime;\n var hasObstacles = this.runningTime > this.config.CLEAR_TIME;\n // First jump triggers the intro.\n if (this.tRex.jumpCount == 1 && !this.playingIntro) {\n this.playIntro();\n }\n // The horizon doesn't move until the intro is over.\n if (this.playingIntro) {\n this.horizon.update(0, this.currentSpeed, hasObstacles);\n } else {\n deltaTime = !this.started ? 0 : deltaTime;\n this.horizon.update(deltaTime, this.currentSpeed, hasObstacles);\n }\n // Check for collisions.\n var collision = hasObstacles &&\n checkForCollision(this.horizon.obstacles[0], this.tRex);\n if (!collision) {\n this.distanceRan += this.currentSpeed * deltaTime / this.msPerFrame;\n if (this.currentSpeed < this.config.MAX_SPEED) {\n this.currentSpeed += this.config.ACCELERATION;\n }\n } else {\n this.gameOver();\n }\n if (this.distanceMeter.getActualDistance(this.distanceRan) >\n this.distanceMeter.maxScore) {\n this.distanceRan = 0;\n }\n var playAcheivementSound = this.distanceMeter.update(deltaTime,\n Math.ceil(this.distanceRan));\n if (playAcheivementSound) {\n this.playSound(this.soundFx.SCORE);\n }\n }\n if (!this.crashed) {\n this.tRex.update(deltaTime);\n this.raq();\n }\n },\n /**\n * Event handler.\n */\n handleEvent: function(e) {\n return (function(evtType, events) {\n switch (evtType) {\n case events.KEYDOWN:\n case events.TOUCHSTART:\n case events.MOUSEDOWN:\n this.onKeyDown(e);\n break;\n case events.KEYUP:\n case events.TOUCHEND:\n case events.MOUSEUP:\n this.onKeyUp(e);\n break;\n }\n }.bind(this))(e.type, Runner.events);\n },\n /**\n * Bind relevant key / mouse / touch listeners.\n */\n startListening: function() {\n // Keys.\n document.addEventListener(Runner.events.KEYDOWN, this);\n document.addEventListener(Runner.events.KEYUP, this);\n if (IS_MOBILE) {\n // Mobile only touch devices.\n this.touchController.addEventListener(Runner.events.TOUCHSTART, this);\n this.touchController.addEventListener(Runner.events.TOUCHEND, this);\n this.containerEl.addEventListener(Runner.events.TOUCHSTART, this);\n } else {\n // Mouse.\n document.addEventListener(Runner.events.MOUSEDOWN, this);\n document.addEventListener(Runner.events.MOUSEUP, this);\n }\n },\n /**\n * Remove all listeners.\n */\n stopListening: function() {\n document.removeEventListener(Runner.events.KEYDOWN, this);\n document.removeEventListener(Runner.events.KEYUP, this);\n if (IS_MOBILE) {\n this.touchController.removeEventListener(Runner.events.TOUCHSTART, this);\n this.touchController.removeEventListener(Runner.events.TOUCHEND, this);\n this.containerEl.removeEventListener(Runner.events.TOUCHSTART, this);\n } else {\n document.removeEventListener(Runner.events.MOUSEDOWN, this);\n document.removeEventListener(Runner.events.MOUSEUP, this);\n }\n },\n /**\n * Process keydown.\n * @param {Event} e\n */\n onKeyDown: function(e) {\n if (e.target != this.detailsButton) {\n if (!this.crashed && (Runner.keycodes.JUMP[String(e.keyCode)] ||\n e.type == Runner.events.TOUCHSTART)) {\n if (!this.activated) {\n this.loadSounds();\n this.activated = true;\n }\n if (!this.tRex.jumping) {\n this.playSound(this.soundFx.BUTTON_PRESS);\n this.tRex.startJump();\n }\n }\n if (this.crashed && e.type == Runner.events.TOUCHSTART &&\n e.currentTarget == this.containerEl) {\n this.restart();\n }\n }\n // Speed drop, activated only when jump key is not pressed.\n if (Runner.keycodes.DUCK[e.keyCode] && this.tRex.jumping) {\n e.preventDefault();\n this.tRex.setSpeedDrop();\n }\n },\n /**\n * Process key up.\n * @param {Event} e\n */\n onKeyUp: function(e) {\n var keyCode = String(e.keyCode);\n var isjumpKey = Runner.keycodes.JUMP[keyCode] ||\n e.type == Runner.events.TOUCHEND ||\n e.type == Runner.events.MOUSEDOWN;\n if (this.isRunning() && isjumpKey) {\n this.tRex.endJump();\n } else if (Runner.keycodes.DUCK[keyCode]) {\n this.tRex.speedDrop = false;\n } else if (this.crashed) {\n // Check that enough time has elapsed before allowing jump key to restart.\n var deltaTime = getTimeStamp() - this.time;\n if (Runner.keycodes.RESTART[keyCode] ||\n (e.type == Runner.events.MOUSEUP && e.target == this.canvas) ||\n (deltaTime >= this.config.GAMEOVER_CLEAR_TIME &&\n Runner.keycodes.JUMP[keyCode])) {\n this.restart();\n }\n } else if (this.paused && isjumpKey) {\n this.play();\n }\n },\n /**\n * RequestAnimationFrame wrapper.\n */\n raq: function() {\n if (!this.drawPending) {\n this.drawPending = true;\n this.raqId = requestAnimationFrame(this.update.bind(this));\n }\n },\n /**\n * Whether the game is running.\n * @return {boolean}\n */\n isRunning: function() {\n return !!this.raqId;\n },\n\n gameOver: function() {\n this.playSound(this.soundFx.HIT);\n vibrate(200);\n this.stop();\n this.crashed = true;\n this.distanceMeter.acheivement = false;\n this.tRex.update(100, Trex.status.CRASHED);\n if (!this.gameOverPanel) {\n this.gameOverPanel = new GameOverPanel(this.canvas,\n this.images.TEXT_SPRITE, this.images.RESTART,\n this.dimensions);\n } else {\n this.gameOverPanel.draw();\n }\n if (this.distanceRan > this.highestScore) {\n this.highestScore = Math.ceil(this.distanceRan);\n this.distanceMeter.setHighScore(this.highestScore);\n }\n this.time = getTimeStamp();\n },\n stop: function() {\n this.activated = false;\n this.paused = true;\n cancelAnimationFrame(this.raqId);\n this.raqId = 0;\n },\n play: function() {\n if (!this.crashed) {\n this.activated = true;\n this.paused = false;\n this.tRex.update(0, Trex.status.RUNNING);\n this.time = getTimeStamp();\n this.update();\n }\n },\n restart: function() {\n if (!this.raqId) {\n this.playCount++;\n this.runningTime = 0;\n this.activated = true;\n this.crashed = false;\n this.distanceRan = 0;\n this.setSpeed(this.config.SPEED);\n this.time = getTimeStamp();\n this.containerEl.classList.remove(Runner.classes.CRASHED);\n this.clearCanvas();\n this.distanceMeter.reset(this.highestScore);\n this.horizon.reset();\n this.tRex.reset();\n this.playSound(this.soundFx.BUTTON_PRESS);\n this.update();\n }\n },\n /**\n * Pause the game if the tab is not in focus.\n */\n onVisibilityChange: function(e) {\n if (document.hidden || document.webkitHidden || e.type == 'blur') {\n this.stop();\n } else {\n this.play();\n }\n },\n /**\n * Play a sound.\n * @param {SoundBuffer} soundBuffer\n */\n playSound: function(soundBuffer) {\n if (soundBuffer) {\n var sourceNode = this.audioContext.createBufferSource();\n sourceNode.buffer = soundBuffer;\n sourceNode.connect(this.audioContext.destination);\n sourceNode.start(0);\n }\n }\n };\n /**\n * Updates the canvas size taking into\n * account the backing store pixel ratio and\n * the device pixel ratio.\n *\n * See article by Paul Lewis:\n * https://www.html5rocks.com/en/tutorials/canvas/hidpi/\n *\n * @param {HTMLCanvasElement} canvas\n * @param {number} opt_width\n * @param {number} opt_height\n * @return {boolean} Whether the canvas was scaled.\n */\n Runner.updateCanvasScaling = function(canvas, opt_width, opt_height) {\n var context = canvas.getContext('2d');\n // Query the various pixel ratios\n var devicePixelRatio = Math.floor(window.devicePixelRatio) || 1;\n var backingStoreRatio = Math.floor(context.webkitBackingStorePixelRatio) || 1;\n var ratio = devicePixelRatio / backingStoreRatio;\n // Upscale the canvas if the two ratios don't match\n if (devicePixelRatio !== backingStoreRatio) {\n var oldWidth = opt_width || canvas.width;\n var oldHeight = opt_height || canvas.height;\n canvas.width = oldWidth * ratio;\n canvas.height = oldHeight * ratio;\n canvas.style.width = oldWidth + 'px';\n canvas.style.height = oldHeight + 'px';\n // Scale the context to counter the fact that we've manually scaled\n // our canvas element.\n context.scale(ratio, ratio);\n return true;\n }\n return false;\n };\n /**\n * Get random number.\n * @param {number} min\n * @param {number} max\n * @param {number}\n */\n function getRandomNum(min, max) {\n return Math.floor(Math.random() * (max - min + 1)) + min;\n }\n /**\n * Vibrate on mobile devices.\n * @param {number} duration Duration of the vibration in milliseconds.\n */\n function vibrate(duration) {\n if (IS_MOBILE && window.navigator.vibrate) {\n window.navigator.vibrate(duration);\n }\n }\n /**\n * Create canvas element.\n * @param {HTMLElement} container Element to append canvas to.\n * @param {number} width\n * @param {number} height\n * @param {string} opt_classname\n * @return {HTMLCanvasElement}\n */\n function createCanvas(container, width, height, opt_classname) {\n var canvas = document.createElement('canvas');\n canvas.className = opt_classname ? Runner.classes.CANVAS + ' ' +\n opt_classname : Runner.classes.CANVAS;\n canvas.width = width;\n canvas.height = height;\n container.appendChild(canvas);\n return canvas;\n }\n /**\n * Decodes the base 64 audio to ArrayBuffer used by Web Audio.\n * @param {string} base64String\n */\n function decodeBase64ToArrayBuffer(base64String) {\n var len = (base64String.length / 4) * 3;\n var str = atob(base64String);\n var arrayBuffer = new ArrayBuffer(len);\n var bytes = new Uint8Array(arrayBuffer);\n for (var i = 0; i < len; i++) {\n bytes[i] = str.charCodeAt(i);\n }\n return bytes.buffer;\n }\n /**\n * Return the current timestamp.\n * @return {number}\n */\n function getTimeStamp() {\n return IS_IOS ? new Date().getTime() : performance.now();\n }\n //******************************************************************************\n /**\n * Game over panel.\n * @param {!HTMLCanvasElement} canvas\n * @param {!HTMLImage} textSprite\n * @param {!HTMLImage} restartImg\n * @param {!Object} dimensions Canvas dimensions.\n * @constructor\n */\n function GameOverPanel(canvas, textSprite, restartImg, dimensions) {\n this.canvas = canvas;\n this.canvasCtx = canvas.getContext('2d');\n this.canvasDimensions = dimensions;\n this.textSprite = textSprite;\n this.restartImg = restartImg;\n this.draw();\n };\n /**\n * Dimensions used in the panel.\n * @enum {number}\n */\n GameOverPanel.dimensions = {\n TEXT_X: 0,\n TEXT_Y: 13,\n TEXT_WIDTH: 191,\n TEXT_HEIGHT: 11,\n RESTART_WIDTH: 36,\n RESTART_HEIGHT: 32\n };\n GameOverPanel.prototype = {\n /**\n * Update the panel dimensions.\n * @param {number} width New canvas width.\n * @param {number} opt_height Optional new canvas height.\n */\n updateDimensions: function(width, opt_height) {\n this.canvasDimensions.WIDTH = width;\n if (opt_height) {\n this.canvasDimensions.HEIGHT = opt_height;\n }\n },\n /**\n * Draw the panel.\n */\n draw: function() {\n var dimensions = GameOverPanel.dimensions;\n var centerX = this.canvasDimensions.WIDTH / 2;\n // Game over text.\n var textSourceX = dimensions.TEXT_X;\n var textSourceY = dimensions.TEXT_Y;\n var textSourceWidth = dimensions.TEXT_WIDTH;\n var textSourceHeight = dimensions.TEXT_HEIGHT;\n var textTargetX = Math.round(centerX - (dimensions.TEXT_WIDTH / 2));\n var textTargetY = Math.round((this.canvasDimensions.HEIGHT - 25) / 3);\n var textTargetWidth = dimensions.TEXT_WIDTH;\n var textTargetHeight = dimensions.TEXT_HEIGHT;\n var restartSourceWidth = dimensions.RESTART_WIDTH;\n var restartSourceHeight = dimensions.RESTART_HEIGHT;\n var restartTargetX = centerX - (dimensions.RESTART_WIDTH / 2);\n var restartTargetY = this.canvasDimensions.HEIGHT / 2;\n if (IS_HIDPI) {\n textSourceY *= 2;\n textSourceX *= 2;\n textSourceWidth *= 2;\n textSourceHeight *= 2;\n restartSourceWidth *= 2;\n restartSourceHeight *= 2;\n }\n // Game over text from sprite.\n this.canvasCtx.drawImage(this.textSprite,\n textSourceX, textSourceY, textSourceWidth, textSourceHeight,\n textTargetX, textTargetY, textTargetWidth, textTargetHeight);\n // Restart button.\n this.canvasCtx.drawImage(this.restartImg, 0, 0,\n restartSourceWidth, restartSourceHeight,\n restartTargetX, restartTargetY, dimensions.RESTART_WIDTH,\n dimensions.RESTART_HEIGHT);\n }\n };\n //******************************************************************************\n /**\n * Check for a collision.\n * @param {!Obstacle} obstacle\n * @param {!Trex} tRex T-rex object.\n * @param {HTMLCanvasContext} opt_canvasCtx Optional canvas context for drawing\n * collision boxes.\n * @return {Array.<CollisionBox>}\n */\n function checkForCollision(obstacle, tRex, opt_canvasCtx) {\n var obstacleBoxXPos = Runner.defaultDimensions.WIDTH + obstacle.xPos;\n // Adjustments are made to the bounding box as there is a 1 pixel white\n // border around the t-rex and obstacles.\n var tRexBox = new CollisionBox(\n tRex.xPos + 1,\n tRex.yPos + 1,\n tRex.config.WIDTH - 2,\n tRex.config.HEIGHT - 2);\n var obstacleBox = new CollisionBox(\n obstacle.xPos + 1,\n obstacle.yPos + 1,\n obstacle.typeConfig.width * obstacle.size - 2,\n obstacle.typeConfig.height - 2);\n // Debug outer box\n if (opt_canvasCtx) {\n drawCollisionBoxes(opt_canvasCtx, tRexBox, obstacleBox);\n }\n // Simple outer bounds check.\n if (boxCompare(tRexBox, obstacleBox)) {\n var collisionBoxes = obstacle.collisionBoxes;\n var tRexCollisionBoxes = Trex.collisionBoxes;\n // Detailed axis aligned box check.\n for (var t = 0; t < tRexCollisionBoxes.length; t++) {\n for (var i = 0; i < collisionBoxes.length; i++) {\n // Adjust the box to actual positions.\n var adjTrexBox =\n createAdjustedCollisionBox(tRexCollisionBoxes[t], tRexBox);\n var adjObstacleBox =\n createAdjustedCollisionBox(collisionBoxes[i], obstacleBox);\n var crashed = boxCompare(adjTrexBox, adjObstacleBox);\n // Draw boxes for debug.\n if (opt_canvasCtx) {\n drawCollisionBoxes(opt_canvasCtx, adjTrexBox, adjObstacleBox);\n }\n if (crashed) {\n return [adjTrexBox, adjObstacleBox];\n }\n }\n }\n }\n return false;\n };\n /**\n * Adjust the collision box.\n * @param {!CollisionBox} box The original box.\n * @param {!CollisionBox} adjustment Adjustment box.\n * @return {CollisionBox} The adjusted collision box object.\n */\n function createAdjustedCollisionBox(box, adjustment) {\n return new CollisionBox(\n box.x + adjustment.x,\n box.y + adjustment.y,\n box.width,\n box.height);\n };\n /**\n * Draw the collision boxes for debug.\n */\n function drawCollisionBoxes(canvasCtx, tRexBox, obstacleBox) {\n canvasCtx.save();\n canvasCtx.strokeStyle = '#f00';\n canvasCtx.strokeRect(tRexBox.x, tRexBox.y,\n tRexBox.width, tRexBox.height);\n canvasCtx.strokeStyle = '#0f0';\n canvasCtx.strokeRect(obstacleBox.x, obstacleBox.y,\n obstacleBox.width, obstacleBox.height);\n canvasCtx.restore();\n };\n /**\n * Compare two collision boxes for a collision.\n * @param {CollisionBox} tRexBox\n * @param {CollisionBox} obstacleBox\n * @return {boolean} Whether the boxes intersected.\n */\n function boxCompare(tRexBox, obstacleBox) {\n var crashed = false;\n var tRexBoxX = tRexBox.x;\n var tRexBoxY = tRexBox.y;\n var obstacleBoxX = obstacleBox.x;\n var obstacleBoxY = obstacleBox.y;\n // Axis-Aligned Bounding Box method.\n if (tRexBox.x < obstacleBoxX + obstacleBox.width &&\n tRexBox.x + tRexBox.width > obstacleBoxX &&\n tRexBox.y < obstacleBox.y + obstacleBox.height &&\n tRexBox.height + tRexBox.y > obstacleBox.y) {\n crashed = true;\n }\n return crashed;\n };\n //******************************************************************************\n /**\n * Collision box object.\n * @param {number} x X position.\n * @param {number} y Y Position.\n * @param {number} w Width.\n * @param {number} h Height.\n */\n function CollisionBox(x, y, w, h) {\n this.x = x;\n this.y = y;\n this.width = w;\n this.height = h;\n };\n //******************************************************************************\n /**\n * Obstacle.\n * @param {HTMLCanvasCtx} canvasCtx\n * @param {Obstacle.type} type\n * @param {image} obstacleImg Image sprite.\n * @param {Object} dimensions\n * @param {number} gapCoefficient Mutipler in determining the gap.\n * @param {number} speed\n */\n function Obstacle(canvasCtx, type, obstacleImg, dimensions,\n gapCoefficient, speed) {\n this.canvasCtx = canvasCtx;\n this.image = obstacleImg;\n this.typeConfig = type;\n this.gapCoefficient = gapCoefficient;\n this.size = getRandomNum(1, Obstacle.MAX_OBSTACLE_LENGTH);\n this.dimensions = dimensions;\n this.remove = false;\n this.xPos = 0;\n this.yPos = this.typeConfig.yPos;\n this.width = 0;\n this.collisionBoxes = [];\n this.gap = 0;\n this.init(speed);\n };\n /**\n * Coefficient for calculating the maximum gap.\n * @const\n */\n Obstacle.MAX_GAP_COEFFICIENT = 1.5;\n /**\n * Maximum obstacle grouping count.\n * @const\n */\n Obstacle.MAX_OBSTACLE_LENGTH = 3,\n Obstacle.prototype = {\n /**\n * Initialise the DOM for the obstacle.\n * @param {number} speed\n */\n init: function(speed) {\n this.cloneCollisionBoxes();\n // Only allow sizing if we're at the right speed.\n if (this.size > 1 && this.typeConfig.multipleSpeed > speed) {\n this.size = 1;\n }\n this.width = this.typeConfig.width * this.size;\n this.xPos = this.dimensions.WIDTH - this.width;\n this.draw();\n // Make collision box adjustments,\n // Central box is adjusted to the size as one box.\n // ____ ______ ________\n // _| |-| _| |-| _| |-|\n // | |<->| | | |<--->| | | |<----->| |\n // | | 1 | | | | 2 | | | | 3 | |\n // |_|___|_| |_|_____|_| |_|_______|_|\n //\n if (this.size > 1) {\n this.collisionBoxes[1].width = this.width - this.collisionBoxes[0].width -\n this.collisionBoxes[2].width;\n this.collisionBoxes[2].x = this.width - this.collisionBoxes[2].width;\n }\n this.gap = this.getGap(this.gapCoefficient, speed);\n },\n /**\n * Draw and crop based on size.\n */\n draw: function() {\n var sourceWidth = this.typeConfig.width;\n var sourceHeight = this.typeConfig.height;\n if (IS_HIDPI) {\n sourceWidth = sourceWidth * 2;\n sourceHeight = sourceHeight * 2;\n }\n // Sprite\n var sourceX = (sourceWidth * this.size) * (0.5 * (this.size - 1));\n this.canvasCtx.drawImage(this.image,\n sourceX, 0,\n sourceWidth * this.size, sourceHeight,\n this.xPos, this.yPos,\n this.typeConfig.width * this.size, this.typeConfig.height);\n },\n /**\n * Obstacle frame update.\n * @param {number} deltaTime\n * @param {number} speed\n */\n update: function(deltaTime, speed) {\n if (!this.remove) {\n this.xPos -= Math.floor((speed * FPS / 1000) * deltaTime);\n this.draw();\n if (!this.isVisible()) {\n this.remove = true;\n }\n }\n },\n /**\n * Calculate a random gap size.\n * - Minimum gap gets wider as speed increses\n * @param {number} gapCoefficient\n * @param {number} speed\n * @return {number} The gap size.\n */\n getGap: function(gapCoefficient, speed) {\n var minGap = Math.round(this.width * speed +\n this.typeConfig.minGap * gapCoefficient);\n var maxGap = Math.round(minGap * Obstacle.MAX_GAP_COEFFICIENT);\n return getRandomNum(minGap, maxGap);\n },\n /**\n * Check if obstacle is visible.\n * @return {boolean} Whether the obstacle is in the game area.\n */\n isVisible: function() {\n return this.xPos + this.width > 0;\n },\n /**\n * Make a copy of the collision boxes, since these will change based on\n * obstacle type and size.\n */\n cloneCollisionBoxes: function() {\n var collisionBoxes = this.typeConfig.collisionBoxes;\n for (var i = collisionBoxes.length - 1; i >= 0; i--) {\n this.collisionBoxes[i] = new CollisionBox(collisionBoxes[i].x,\n collisionBoxes[i].y, collisionBoxes[i].width,\n collisionBoxes[i].height);\n }\n }\n };\n /**\n * Obstacle definitions.\n * minGap: minimum pixel space betweeen obstacles.\n * multipleSpeed: Speed at which multiples are allowed.\n */\n Obstacle.types = [\n {\n type: 'CACTUS_SMALL',\n className: ' cactus cactus-small ',\n width: 17,\n height: 35,\n yPos: 105,\n multipleSpeed: 3,\n minGap: 120,\n collisionBoxes: [\n new CollisionBox(0, 7, 5, 27),\n new CollisionBox(4, 0, 6, 34),\n new CollisionBox(10, 4, 7, 14)\n ]\n },\n {\n type: 'CACTUS_LARGE',\n className: ' cactus cactus-large ',\n width: 25,\n height: 50,\n yPos: 90,\n multipleSpeed: 6,\n minGap: 120,\n collisionBoxes: [\n new CollisionBox(0, 12, 7, 38),\n new CollisionBox(8, 0, 7, 49),\n new CollisionBox(13, 10, 10, 38)\n ]\n }\n ];\n //******************************************************************************\n /**\n * T-rex game character.\n * @param {HTMLCanvas} canvas\n * @param {HTMLImage} image Character image.\n * @constructor\n */\n function Trex(canvas, image) {\n this.canvas = canvas;\n this.canvasCtx = canvas.getContext('2d');\n this.image = image;\n this.xPos = 0;\n this.yPos = 0;\n // Position when on the ground.\n this.groundYPos = 0;\n this.currentFrame = 0;\n this.currentAnimFrames = [];\n this.blinkDelay = 0;\n this.animStartTime = 0;\n this.timer = 0;\n this.msPerFrame = 1000 / FPS;\n this.config = Trex.config;\n // Current status.\n this.status = Trex.status.WAITING;\n this.jumping = false;\n this.jumpVelocity = 0;\n this.reachedMinHeight = false;\n this.speedDrop = false;\n this.jumpCount = 0;\n this.jumpspotX = 0;\n this.init();\n };\n /**\n * T-rex player config.\n * @enum {number}\n */\n Trex.config = {\n DROP_VELOCITY: -5,\n GRAVITY: 0.6,\n HEIGHT: 47,\n INIITAL_JUMP_VELOCITY: -10,\n INTRO_DURATION: 1500,\n MAX_JUMP_HEIGHT: 30,\n MIN_JUMP_HEIGHT: 30,\n SPEED_DROP_COEFFICIENT: 3,\n SPRITE_WIDTH: 262,\n START_X_POS: 50,\n WIDTH: 44\n };\n /**\n * Used in collision detection.\n * @type {Array.<CollisionBox>}\n */\n Trex.collisionBoxes = [\n new CollisionBox(1, -1, 30, 26),\n new CollisionBox(32, 0, 8, 16),\n new CollisionBox(10, 35, 14, 8),\n new CollisionBox(1, 24, 29, 5),\n new CollisionBox(5, 30, 21, 4),\n new CollisionBox(9, 34, 15, 4)\n ];\n /**\n * Animation states.\n * @enum {string}\n */\n Trex.status = {\n CRASHED: 'CRASHED',\n JUMPING: 'JUMPING',\n RUNNING: 'RUNNING',\n WAITING: 'WAITING'\n };\n /**\n * Blinking coefficient.\n * @const\n */\n Trex.BLINK_TIMING = 7000;\n /**\n * Animation config for different states.\n * @enum {object}\n */\n Trex.animFrames = {\n WAITING: {\n frames: [44, 0],\n msPerFrame: 1000 / 3\n },\n RUNNING: {\n frames: [88, 132],\n msPerFrame: 1000 / 12\n },\n CRASHED: {\n frames: [220],\n msPerFrame: 1000 / 60\n },\n JUMPING: {\n frames: [0],\n msPerFrame: 1000 / 60\n }\n };\n Trex.prototype = {\n /**\n * T-rex player initaliser.\n * Sets the t-rex to blink at random intervals.\n */\n init: function() {\n this.blinkDelay = this.setBlinkDelay();\n this.groundYPos = Runner.defaultDimensions.HEIGHT - this.config.HEIGHT -\n Runner.config.BOTTOM_PAD;\n this.yPos = this.groundYPos;\n this.minJumpHeight = this.groundYPos - this.config.MIN_JUMP_HEIGHT;\n this.draw(0, 0);\n this.update(0, Trex.status.WAITING);\n },\n /**\n * Setter for the jump velocity.\n * The approriate drop velocity is also set.\n */\n setJumpVelocity: function(setting) {\n this.config.INIITAL_JUMP_VELOCITY = -setting;\n this.config.DROP_VELOCITY = -setting / 2;\n },\n /**\n * Set the animation status.\n * @param {!number} deltaTime\n * @param {Trex.status} status Optional status to switch to.\n */\n update: function(deltaTime, opt_status) {\n this.timer += deltaTime;\n // Update the status.\n if (opt_status) {\n this.status = opt_status;\n this.currentFrame = 0;\n this.msPerFrame = Trex.animFrames[opt_status].msPerFrame;\n this.currentAnimFrames = Trex.animFrames[opt_status].frames;\n if (opt_status == Trex.status.WAITING) {\n this.animStartTime = getTimeStamp();\n this.setBlinkDelay();\n }\n }\n // Game intro animation, T-rex moves in from the left.\n if (this.playingIntro && this.xPos < this.config.START_X_POS) {\n this.xPos += Math.round((this.config.START_X_POS /\n this.config.INTRO_DURATION) * deltaTime);\n }\n if (this.status == Trex.status.WAITING) {\n this.blink(getTimeStamp());\n } else {\n this.draw(this.currentAnimFrames[this.currentFrame], 0);\n }\n // Update the frame position.\n if (this.timer >= this.msPerFrame) {\n this.currentFrame = this.currentFrame ==\n this.currentAnimFrames.length - 1 ? 0 : this.currentFrame + 1;\n this.timer = 0;\n }\n },\n /**\n * Draw the t-rex to a particular position.\n * @param {number} x\n * @param {number} y\n */\n draw: function(x, y) {\n var sourceX = x;\n var sourceY = y;\n var sourceWidth = this.config.WIDTH;\n var sourceHeight = this.config.HEIGHT;\n if (IS_HIDPI) {\n sourceX *= 2;\n sourceY *= 2;\n sourceWidth *= 2;\n sourceHeight *= 2;\n }\n this.canvasCtx.drawImage(this.image, sourceX, sourceY,\n sourceWidth, sourceHeight,\n this.xPos, this.yPos,\n this.config.WIDTH, this.config.HEIGHT);\n },\n /**\n * Sets a random time for the blink to happen.\n */\n setBlinkDelay: function() {\n this.blinkDelay = Math.ceil(Math.random() * Trex.BLINK_TIMING);\n },\n /**\n * Make t-rex blink at random intervals.\n * @param {number} time Current time in milliseconds.\n */\n blink: function(time) {\n var deltaTime = time - this.animStartTime;\n if (deltaTime >= this.blinkDelay) {\n this.draw(this.currentAnimFrames[this.currentFrame], 0);\n if (this.currentFrame == 1) {\n // Set new random delay to blink.\n this.setBlinkDelay();\n this.animStartTime = time;\n }\n }\n },\n /**\n * Initialise a jump.\n */\n startJump: function() {\n if (!this.jumping) {\n this.update(0, Trex.status.JUMPING);\n this.jumpVelocity = this.config.INIITAL_JUMP_VELOCITY;\n this.jumping = true;\n this.reachedMinHeight = false;\n this.speedDrop = false;\n }\n },\n /**\n * Jump is complete, falling down.\n */\n endJump: function() {\n if (this.reachedMinHeight &&\n this.jumpVelocity < this.config.DROP_VELOCITY) {\n this.jumpVelocity = this.config.DROP_VELOCITY;\n }\n },\n /**\n * Update frame for a jump.\n * @param {number} deltaTime\n */\n updateJump: function(deltaTime) {\n var msPerFrame = Trex.animFrames[this.status].msPerFrame;\n var framesElapsed = deltaTime / msPerFrame;\n // Speed drop makes Trex fall faster.\n if (this.speedDrop) {\n this.yPos += Math.round(this.jumpVelocity *\n this.config.SPEED_DROP_COEFFICIENT * framesElapsed);\n } else {\n this.yPos += Math.round(this.jumpVelocity * framesElapsed);\n }\n this.jumpVelocity += this.config.GRAVITY * framesElapsed;\n // Minimum height has been reached.\n if (this.yPos < this.minJumpHeight || this.speedDrop) {\n this.reachedMinHeight = true;\n }\n // Reached max height\n if (this.yPos < this.config.MAX_JUMP_HEIGHT || this.speedDrop) {\n this.endJump();\n }\n // Back down at ground level. Jump completed.\n if (this.yPos > this.groundYPos) {\n this.reset();\n this.jumpCount++;\n }\n this.update(deltaTime);\n },\n /**\n * Set the speed drop. Immediately cancels the current jump.\n */\n setSpeedDrop: function() {\n this.speedDrop = true;\n this.jumpVelocity = 1;\n },\n /**\n * Reset the t-rex to running at start of game.\n */\n reset: function() {\n this.yPos = this.groundYPos;\n this.jumpVelocity = 0;\n this.jumping = false;\n this.update(0, Trex.status.RUNNING);\n this.midair = false;\n this.speedDrop = false;\n this.jumpCount = 0;\n }\n };\n //******************************************************************************\n /**\n * Handles displaying the distance meter.\n * @param {!HTMLCanvasElement} canvas\n * @param {!HTMLImage} spriteSheet Image sprite.\n * @param {number} canvasWidth\n * @constructor\n */\n function DistanceMeter(canvas, spriteSheet, canvasWidth) {\n this.canvas = canvas;\n this.canvasCtx = canvas.getContext('2d');\n this.image = spriteSheet;\n this.x = 0;\n this.y = 5;\n this.currentDistance = 0;\n this.maxScore = 0;\n this.highScore = 0;\n this.container = null;\n this.digits = [];\n this.acheivement = false;\n this.defaultString = '';\n this.flashTimer = 0;\n this.flashIterations = 0;\n this.config = DistanceMeter.config;\n this.init(canvasWidth);\n };\n /**\n * @enum {number}\n */\n DistanceMeter.dimensions = {\n WIDTH: 10,\n HEIGHT: 13,\n DEST_WIDTH: 11\n };\n /**\n * Y positioning of the digits in the sprite sheet.\n * X position is always 0.\n * @type {array.<number>}\n */\n DistanceMeter.yPos = [0, 13, 27, 40, 53, 67, 80, 93, 107, 120];\n /**\n * Distance meter config.\n * @enum {number}\n */\n DistanceMeter.config = {\n // Number of digits.\n MAX_DISTANCE_UNITS: 5,\n // Distance that causes achievement animation.\n ACHIEVEMENT_DISTANCE: 100,\n // Used for conversion from pixel distance to a scaled unit.\n COEFFICIENT: 0.025,\n // Flash duration in milliseconds.\n FLASH_DURATION: 1000 / 4,\n // Flash iterations for achievement animation.\n FLASH_ITERATIONS: 3\n };\n DistanceMeter.prototype = {\n /**\n * Initialise the distance meter to '00000'.\n * @param {number} width Canvas width in px.\n */\n init: function(width) {\n var maxDistanceStr = '';\n this.calcXPos(width);\n this.maxScore = this.config.MAX_DISTANCE_UNITS;\n for (var i = 0; i < this.config.MAX_DISTANCE_UNITS; i++) {\n this.draw(i, 0);\n this.defaultString += '0';\n maxDistanceStr += '9';\n }\n this.maxScore = parseInt(maxDistanceStr);\n },\n /**\n * Calculate the xPos in the canvas.\n * @param {number} canvasWidth\n */\n calcXPos: function(canvasWidth) {\n this.x = canvasWidth - (DistanceMeter.dimensions.DEST_WIDTH *\n (this.config.MAX_DISTANCE_UNITS + 1));\n },\n /**\n * Draw a digit to canvas.\n * @param {number} digitPos Position of the digit.\n * @param {number} value Digit value 0-9.\n * @param {boolean} opt_highScore Whether drawing the high score.\n */\n draw: function(digitPos, value, opt_highScore) {\n var sourceWidth = DistanceMeter.dimensions.WIDTH;\n var sourceHeight = DistanceMeter.dimensions.HEIGHT;\n var sourceX = DistanceMeter.dimensions.WIDTH * value;\n var targetX = digitPos * DistanceMeter.dimensions.DEST_WIDTH;\n var targetY = this.y;\n var targetWidth = DistanceMeter.dimensions.WIDTH;\n var targetHeight = DistanceMeter.dimensions.HEIGHT;\n // For high DPI we 2x source values.\n if (IS_HIDPI) {\n sourceWidth *= 2;\n sourceHeight *= 2;\n sourceX *= 2;\n }\n this.canvasCtx.save();\n if (opt_highScore) {\n // Left of the current score.\n var highScoreX = this.x - (this.config.MAX_DISTANCE_UNITS * 2) *\n DistanceMeter.dimensions.WIDTH;\n this.canvasCtx.translate(highScoreX, this.y);\n } else {\n this.canvasCtx.translate(this.x, this.y);\n }\n this.canvasCtx.drawImage(this.image, sourceX, 0,\n sourceWidth, sourceHeight,\n targetX, targetY,\n targetWidth, targetHeight\n );\n this.canvasCtx.restore();\n },\n /**\n * Covert pixel distance to a 'real' distance.\n * @param {number} distance Pixel distance ran.\n * @return {number} The 'real' distance ran.\n */\n getActualDistance: function(distance) {\n return distance ?\n Math.round(distance * this.config.COEFFICIENT) : 0;\n },\n /**\n * Update the distance meter.\n * @param {number} deltaTime\n * @param {number} distance\n * @return {boolean} Whether the acheivement sound fx should be played.\n */\n update: function(deltaTime, distance) {\n var paint = true;\n var playSound = false;\n if (!this.acheivement) {\n distance = this.getActualDistance(distance);\n if (distance > 0) {\n // Acheivement unlocked\n if (distance % this.config.ACHIEVEMENT_DISTANCE == 0) {\n // Flash score and play sound.\n this.acheivement = true;\n this.flashTimer = 0;\n playSound = true;\n }\n // Create a string representation of the distance with leading 0.\n var distanceStr = (this.defaultString +\n distance).substr(-this.config.MAX_DISTANCE_UNITS);\n this.digits = distanceStr.split('');\n } else {\n this.digits = this.defaultString.split('');\n }\n } else {\n // Control flashing of the score on reaching acheivement.\n if (this.flashIterations <= this.config.FLASH_ITERATIONS) {\n this.flashTimer += deltaTime;\n if (this.flashTimer < this.config.FLASH_DURATION) {\n paint = false;\n } else if (this.flashTimer >\n this.config.FLASH_DURATION * 2) {\n this.flashTimer = 0;\n this.flashIterations++;\n }\n } else {\n this.acheivement = false;\n this.flashIterations = 0;\n this.flashTimer = 0;\n }\n }\n // Draw the digits if not flashing.\n if (paint) {\n for (var i = this.digits.length - 1; i >= 0; i--) {\n this.draw(i, parseInt(this.digits[i]));\n }\n }\n this.drawHighScore();\n return playSound;\n },\n /**\n * Draw the high score.\n */\n drawHighScore: function() {\n this.canvasCtx.save();\n this.canvasCtx.globalAlpha = .8;\n for (var i = this.highScore.length - 1; i >= 0; i--) {\n this.draw(i, parseInt(this.highScore[i], 10), true);\n }\n this.canvasCtx.restore();\n },\n /**\n * Set the highscore as a array string.\n * Position of char in the sprite: H - 10, I - 11.\n * @param {number} distance Distance ran in pixels.\n */\n setHighScore: function(distance) {\n distance = this.getActualDistance(distance);\n var highScoreStr = (this.defaultString +\n distance).substr(-this.config.MAX_DISTANCE_UNITS);\n this.highScore = ['10', '11', ''].concat(highScoreStr.split(''));\n },\n /**\n * Reset the distance meter back to '00000'.\n */\n reset: function() {\n this.update(0);\n this.acheivement = false;\n }\n };\n //******************************************************************************\n /**\n * Cloud background item.\n * Similar to an obstacle object but without collision boxes.\n * @param {HTMLCanvasElement} canvas Canvas element.\n * @param {Image} cloudImg\n * @param {number} containerWidth\n */\n function Cloud(canvas, cloudImg, containerWidth) {\n this.canvas = canvas;\n this.canvasCtx = this.canvas.getContext('2d');\n this.image = cloudImg;\n this.containerWidth = containerWidth;\n this.xPos = containerWidth;\n this.yPos = 0;\n this.remove = false;\n this.cloudGap = getRandomNum(Cloud.config.MIN_CLOUD_GAP,\n Cloud.config.MAX_CLOUD_GAP);\n this.init();\n };\n /**\n * Cloud object config.\n * @enum {number}\n */\n Cloud.config = {\n HEIGHT: 14,\n MAX_CLOUD_GAP: 400,\n MAX_SKY_LEVEL: 30,\n MIN_CLOUD_GAP: 100,\n MIN_SKY_LEVEL: 71,\n WIDTH: 46\n };\n Cloud.prototype = {\n /**\n * Initialise the cloud. Sets the Cloud height.\n */\n init: function() {\n this.yPos = getRandomNum(Cloud.config.MAX_SKY_LEVEL,\n Cloud.config.MIN_SKY_LEVEL);\n this.draw();\n },\n /**\n * Draw the cloud.\n */\n draw: function() {\n this.canvasCtx.save();\n var sourceWidth = Cloud.config.WIDTH;\n var sourceHeight = Cloud.config.HEIGHT;\n if (IS_HIDPI) {\n sourceWidth = sourceWidth * 2;\n sourceHeight = sourceHeight * 2;\n }\n this.canvasCtx.drawImage(this.image, 0, 0,\n sourceWidth, sourceHeight,\n this.xPos, this.yPos,\n Cloud.config.WIDTH, Cloud.config.HEIGHT);\n this.canvasCtx.restore();\n },\n /**\n * Update the cloud position.\n * @param {number} speed\n */\n update: function(speed) {\n if (!this.remove) {\n this.xPos -= Math.ceil(speed);\n this.draw();\n // Mark as removeable if no longer in the canvas.\n if (!this.isVisible()) {\n this.remove = true;\n }\n }\n },\n /**\n * Check if the cloud is visible on the stage.\n * @return {boolean}\n */\n isVisible: function() {\n return this.xPos + Cloud.config.WIDTH > 0;\n }\n };\n //******************************************************************************\n /**\n * Horizon Line.\n * Consists of two connecting lines. Randomly assigns a flat / bumpy horizon.\n * @param {HTMLCanvasElement} canvas\n * @param {HTMLImage} bgImg Horizon line sprite.\n * @constructor\n */\n function HorizonLine(canvas, bgImg) {\n this.image = bgImg;\n this.canvas = canvas;\n this.canvasCtx = canvas.getContext('2d');\n this.sourceDimensions = {};\n this.dimensions = HorizonLine.dimensions;\n this.sourceXPos = [0, this.dimensions.WIDTH];\n this.xPos = [];\n this.yPos = 0;\n this.bumpThreshold = 0.5;\n this.setSourceDimensions();\n this.draw();\n };\n /**\n * Horizon line dimensions.\n * @enum {number}\n */\n HorizonLine.dimensions = {\n WIDTH: 600,\n HEIGHT: 12,\n YPOS: 127\n };\n HorizonLine.prototype = {\n /**\n * Set the source dimensions of the horizon line.\n */\n setSourceDimensions: function() {\n for (var dimension in HorizonLine.dimensions) {\n if (IS_HIDPI) {\n if (dimension != 'YPOS') {\n this.sourceDimensions[dimension] =\n HorizonLine.dimensions[dimension] * 2;\n }\n } else {\n this.sourceDimensions[dimension] =\n HorizonLine.dimensions[dimension];\n }\n this.dimensions[dimension] = HorizonLine.dimensions[dimension];\n }\n this.xPos = [0, HorizonLine.dimensions.WIDTH];\n this.yPos = HorizonLine.dimensions.YPOS;\n },\n /**\n * Return the crop x position of a type.\n */\n getRandomType: function() {\n return Math.random() > this.bumpThreshold ? this.dimensions.WIDTH : 0;\n },\n /**\n * Draw the horizon line.\n */\n draw: function() {\n this.canvasCtx.drawImage(this.image, this.sourceXPos[0], 0,\n this.sourceDimensions.WIDTH, this.sourceDimensions.HEIGHT,\n this.xPos[0], this.yPos,\n this.dimensions.WIDTH, this.dimensions.HEIGHT);\n this.canvasCtx.drawImage(this.image, this.sourceXPos[1], 0,\n this.sourceDimensions.WIDTH, this.sourceDimensions.HEIGHT,\n this.xPos[1], this.yPos,\n this.dimensions.WIDTH, this.dimensions.HEIGHT);\n },\n /**\n * Update the x position of an indivdual piece of the line.\n * @param {number} pos Line position.\n * @param {number} increment\n */\n updateXPos: function(pos, increment) {\n var line1 = pos;\n var line2 = pos == 0 ? 1 : 0;\n this.xPos[line1] -= increment;\n this.xPos[line2] = this.xPos[line1] + this.dimensions.WIDTH;\n if (this.xPos[line1] <= -this.dimensions.WIDTH) {\n this.xPos[line1] += this.dimensions.WIDTH * 2;\n this.xPos[line2] = this.xPos[line1] - this.dimensions.WIDTH;\n this.sourceXPos[line1] = this.getRandomType();\n }\n },\n /**\n * Update the horizon line.\n * @param {number} deltaTime\n * @param {number} speed\n */\n update: function(deltaTime, speed) {\n var increment = Math.floor(speed * (FPS / 1000) * deltaTime);\n if (this.xPos[0] <= 0) {\n this.updateXPos(0, increment);\n } else {\n this.updateXPos(1, increment);\n }\n this.draw();\n },\n /**\n * Reset horizon to the starting position.\n */\n reset: function() {\n this.xPos[0] = 0;\n this.xPos[1] = HorizonLine.dimensions.WIDTH;\n }\n };\n //******************************************************************************\n /**\n * Horizon background class.\n * @param {HTMLCanvasElement} canvas\n * @param {Array.<HTMLImageElement>} images\n * @param {object} dimensions Canvas dimensions.\n * @param {number} gapCoefficient\n * @constructor\n */\n function Horizon(canvas, images, dimensions, gapCoefficient) {\n this.canvas = canvas;\n this.canvasCtx = this.canvas.getContext('2d');\n this.config = Horizon.config;\n this.dimensions = dimensions;\n this.gapCoefficient = gapCoefficient;\n this.obstacles = [];\n this.horizonOffsets = [0, 0];\n this.cloudFrequency = this.config.CLOUD_FREQUENCY;\n // Cloud\n this.clouds = [];\n this.cloudImg = images.CLOUD;\n this.cloudSpeed = this.config.BG_CLOUD_SPEED;\n // Horizon\n this.horizonImg = images.HORIZON;\n this.horizonLine = null;\n // Obstacles\n this.obstacleImgs = {\n CACTUS_SMALL: images.CACTUS_SMALL,\n CACTUS_LARGE: images.CACTUS_LARGE\n };\n this.init();\n };\n /**\n * Horizon config.\n * @enum {number}\n */\n Horizon.config = {\n BG_CLOUD_SPEED: 0.2,\n BUMPY_THRESHOLD: .3,\n CLOUD_FREQUENCY: .5,\n HORIZON_HEIGHT: 16,\n MAX_CLOUDS: 6\n };\n Horizon.prototype = {\n /**\n * Initialise the horizon. Just add the line and a cloud. No obstacles.\n */\n init: function() {\n this.addCloud();\n this.horizonLine = new HorizonLine(this.canvas, this.horizonImg);\n },\n /**\n * @param {number} deltaTime\n * @param {number} currentSpeed\n * @param {boolean} updateObstacles Used as an override to prevent\n * the obstacles from being updated / added. This happens in the\n * ease in section.\n */\n update: function(deltaTime, currentSpeed, updateObstacles) {\n this.runningTime += deltaTime;\n this.horizonLine.update(deltaTime, currentSpeed);\n this.updateClouds(deltaTime, currentSpeed);\n if (updateObstacles) {\n this.updateObstacles(deltaTime, currentSpeed);\n }\n },\n /**\n * Update the cloud positions.\n * @param {number} deltaTime\n * @param {number} currentSpeed\n */\n updateClouds: function(deltaTime, speed) {\n var cloudSpeed = this.cloudSpeed / 1000 * deltaTime * speed;\n var numClouds = this.clouds.length;\n if (numClouds) {\n for (var i = numClouds - 1; i >= 0; i--) {\n this.clouds[i].update(cloudSpeed);\n }\n var lastCloud = this.clouds[numClouds - 1];\n // Check for adding a new cloud.\n if (numClouds < this.config.MAX_CLOUDS &&\n (this.dimensions.WIDTH - lastCloud.xPos) > lastCloud.cloudGap &&\n this.cloudFrequency > Math.random()) {\n this.addCloud();\n }\n // Remove expired clouds.\n this.clouds = this.clouds.filter(function(obj) {\n return !obj.remove;\n });\n }\n },\n /**\n * Update the obstacle positions.\n * @param {number} deltaTime\n * @param {number} currentSpeed\n */\n updateObstacles: function(deltaTime, currentSpeed) {\n // Obstacles, move to Horizon layer.\n var updatedObstacles = this.obstacles.slice(0);\n for (var i = 0; i < this.obstacles.length; i++) {\n var obstacle = this.obstacles[i];\n obstacle.update(deltaTime, currentSpeed);\n // Clean up existing obstacles.\n if (obstacle.remove) {\n updatedObstacles.shift();\n }\n }\n this.obstacles = updatedObstacles;\n if (this.obstacles.length > 0) {\n var lastObstacle = this.obstacles[this.obstacles.length - 1];\n if (lastObstacle && !lastObstacle.followingObstacleCreated &&\n lastObstacle.isVisible() &&\n (lastObstacle.xPos + lastObstacle.width + lastObstacle.gap) <\n this.dimensions.WIDTH) {\n this.addNewObstacle(currentSpeed);\n lastObstacle.followingObstacleCreated = true;\n }\n } else {\n // Create new obstacles.\n this.addNewObstacle(currentSpeed);\n }\n },\n /**\n * Add a new obstacle.\n * @param {number} currentSpeed\n */\n addNewObstacle: function(currentSpeed) {\n var obstacleTypeIndex =\n getRandomNum(0, Obstacle.types.length - 1);\n var obstacleType = Obstacle.types[obstacleTypeIndex];\n var obstacleImg = this.obstacleImgs[obstacleType.type];\n this.obstacles.push(new Obstacle(this.canvasCtx, obstacleType,\n obstacleImg, this.dimensions, this.gapCoefficient, currentSpeed));\n },\n /**\n * Reset the horizon layer.\n * Remove existing obstacles and reposition the horizon line.\n */\n reset: function() {\n this.obstacles = [];\n this.horizonLine.reset();\n },\n /**\n * Update the canvas width and scaling.\n * @param {number} width Canvas width.\n * @param {number} height Canvas height.\n */\n resize: function(width, height) {\n this.canvas.width = width;\n this.canvas.height = height;\n },\n /**\n * Add a new cloud to the horizon.\n */\n addCloud: function() {\n this.clouds.push(new Cloud(this.canvas, this.cloudImg,\n this.dimensions.WIDTH));\n }\n };\n })();\n\n window.fbAsyncInit = function() {\n    FB.init({\n      appId      : '576553495813787',\n      xfbml      : true,\n      version    : 'v2.2'\n    });\n  };\n\n  (function(d, s, id){\n     var js, fjs = d.getElementsByTagName(s)[0];\n     if (d.getElementById(id)) {return;}\n     js = d.createElement(s); js.id = id;\n     js.src = \"//connect.facebook.net/en_US/sdk.js\";\n     fjs.parentNode.insertBefore(js, fjs);\n   }(document, 'script', 'facebook-jssdk'));\n\n   ","\nconst randomGuess = document.querySelector(\".guessTheNumber__input\");\nconst guessTheNumberResult = document.querySelector(\".guessTheNumber__result\");\nconst btn = document.querySelector(\".guessTheNumber__btn--input\");\nconsole.log(btn);\nbtn.addEventListener(\"click\", (e) => {\n  const randomNumber = Math.floor(Math.random() * 10) + 1;\n  if (+randomGuess.value > 10) {\n    guessTheNumberResult.textContent = `Потрібно ввести число від 1 до 10`;\n    guessTheNumberResult.style.color = \"#000\";\n  } else if (+randomGuess.value === randomNumber) {\n    guessTheNumberResult.textContent = `Вітаю, ви вгадали число! ${randomNumber} `;\n    guessTheNumberResult.style.color = \"green\";\n  } else {\n    guessTheNumberResult.textContent = `Ви програли, комп’ютер загадав ${randomNumber}. `;\n    guessTheNumberResult.style.color = \"red\";\n  }\n});\n","\nfunction isLeapYear(year) {\n  return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  const input = document.getElementById(\"input\");\n  const output = document.getElementById(\"output\");\n  const checkButton = document.getElementById(\"check\");\n\n  checkButton.addEventListener(\"click\", function () {\n    const yearString = input.value.trim();\n    const year = parseInt(yearString, 10);\n\n    if (!isNaN(year)) {\n      if (year < 1900) {\n        output.textContent = \"Будь ласка, введіть свого народження!\";\n        output.style.color = \"#000\";\n        return;\n      } else if (isLeapYear(year)) {\n        output.textContent = \"Ви народилися у високосний рік!\";\n        output.style.color = \"#039900\";\n      } else {\n        output.textContent = \"Ви народилися не у високосний рік!\";\n        output.style.color = \"#900\";\n      }\n    } else {\n      output.textContent = \"Будь ласка, введіть коректний рік!\";\n      output.style.color = \"#000\";\n    }\n  });\n});\ndocument.getElementById(\"input\").addEventListener(\"input\", function () {\n  const input = this;\n  const errorMessage = document.getElementById(\"error-message\");\n  if (input.value > 2025 || input.value < 1) {\n    errorMessage.style.display = \"block\";\n  } else {\n    errorMessage.style.display = \"none\";\n  }\n});\n"],"names":["dropdown","menu","event","toggleTheme","checkbox","body","header","Runner","outerContainerId","opt_config","FPS","DEFAULT_WIDTH","IS_HIDPI","IS_IOS","IS_MOBILE","setting","value","imageSources","numImages","i","imgSource","resourceTemplate","sound","soundSrc","buffer","decodeBase64ToArrayBuffer","index","audioData","opt_speed","speed","mobileSpeed","createCanvas","Horizon","DistanceMeter","Trex","boxStyles","padding","keyframes","now","getTimeStamp","deltaTime","hasObstacles","collision","checkForCollision","playAcheivementSound","e","evtType","events","keyCode","isjumpKey","vibrate","GameOverPanel","soundBuffer","sourceNode","canvas","opt_width","opt_height","context","devicePixelRatio","backingStoreRatio","ratio","oldWidth","oldHeight","getRandomNum","min","max","duration","container","width","height","opt_classname","base64String","len","str","arrayBuffer","bytes","textSprite","restartImg","dimensions","centerX","textSourceX","textSourceY","textSourceWidth","textSourceHeight","textTargetX","textTargetY","textTargetWidth","textTargetHeight","restartSourceWidth","restartSourceHeight","restartTargetX","restartTargetY","obstacle","tRex","opt_canvasCtx","tRexBox","CollisionBox","obstacleBox","drawCollisionBoxes","boxCompare","collisionBoxes","tRexCollisionBoxes","t","adjTrexBox","createAdjustedCollisionBox","adjObstacleBox","crashed","box","adjustment","canvasCtx","obstacleBoxX","x","y","w","h","Obstacle","type","obstacleImg","gapCoefficient","sourceWidth","sourceHeight","sourceX","minGap","maxGap","image","opt_status","sourceY","time","msPerFrame","framesElapsed","spriteSheet","canvasWidth","maxDistanceStr","digitPos","opt_highScore","targetX","targetY","targetWidth","targetHeight","highScoreX","distance","paint","playSound","distanceStr","highScoreStr","Cloud","cloudImg","containerWidth","HorizonLine","bgImg","dimension","pos","increment","line1","line2","images","currentSpeed","updateObstacles","cloudSpeed","numClouds","lastCloud","obj","updatedObstacles","lastObstacle","obstacleTypeIndex","obstacleType","d","s","id","js","fjs","randomGuess","guessTheNumberResult","btn","randomNumber","isLeapYear","year","input","output","yearString","errorMessage"],"mappings":"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"}